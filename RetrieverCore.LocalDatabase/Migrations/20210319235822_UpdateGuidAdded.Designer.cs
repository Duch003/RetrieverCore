// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetrieverCore.LocalDatabase;

namespace RetrieverCore.LocalDatabase.Migrations
{
    [DbContext(typeof(LocalDatabaseContext))]
    [Migration("20210319235822_UpdateGuidAdded")]
    partial class UpdateGuidAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.BatteryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("DesignedCapacity")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("Batteries");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.ComputerEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainboardID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MainboardID");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.DDREntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DesignedClocking")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetClocking")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("DDRs");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.GPUEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<double>("MemorySize")
                        .HasColumnType("REAL");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScreenHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScreenWidth")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("GPUs");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.MainboardEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Mainboards");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.MainboardPortEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalName")
                        .HasColumnType("TEXT");

                    b.Property<string>("InternalName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PortType")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("MainboardPorts");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.NetworkInterfaceEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdapterType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Caption")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<int>("NetworkInterfaceType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("NetworkInterfaces");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.ProcessorEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Architecture")
                        .HasColumnType("TEXT");

                    b.Property<double>("ClockSpeed")
                        .HasColumnType("REAL");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Cores")
                        .HasColumnType("INTEGER");

                    b.Property<double>("L2CacheSize")
                        .HasColumnType("REAL");

                    b.Property<double>("L3CacheSize")
                        .HasColumnType("REAL");

                    b.Property<byte>("LogicalProcessors")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Socket")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("Processors");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.StorageEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UpdateID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.BatteryEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.ComputerEntity", null)
                        .WithMany("Batteries")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.ComputerEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.MainboardEntity", "Mainboard")
                        .WithMany()
                        .HasForeignKey("MainboardID");

                    b.Navigation("Mainboard");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.DDREntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.ComputerEntity", null)
                        .WithMany("DDRs")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.GPUEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.ComputerEntity", null)
                        .WithMany("GPUs")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.MainboardPortEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.ComputerEntity", null)
                        .WithMany("MainboardPorts")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.NetworkInterfaceEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.ComputerEntity", null)
                        .WithMany("NetworkInterfaces")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.ProcessorEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.ComputerEntity", null)
                        .WithMany("Processors")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.StorageEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.ComputerEntity", null)
                        .WithMany("Storages")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.ComputerEntity", b =>
                {
                    b.Navigation("Batteries");

                    b.Navigation("DDRs");

                    b.Navigation("GPUs");

                    b.Navigation("MainboardPorts");

                    b.Navigation("NetworkInterfaces");

                    b.Navigation("Processors");

                    b.Navigation("Storages");
                });
#pragma warning restore 612, 618
        }
    }
}
