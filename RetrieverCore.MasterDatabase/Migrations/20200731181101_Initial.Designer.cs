// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetrieverCore.MasterDatabase.Context;

namespace RetrieverCore.MasterDatabase.Migrations
{
    [DbContext(typeof(MasterDatabaseContext))]
    [Migration("20200731181101_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID");

                    b.ToTable("WmiResultsSet");
                });

            modelBuilder.Entity("GathererEngine.Models.BatteryFullChargedCapacity", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Frequency_Object")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Frequency_PerfTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Frequency_Sys100NS")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("FullChargedCapacity")
                        .HasColumnType("bigint");

                    b.Property<string>("InstanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Tag")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Timestamp_Object")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Timestamp_PerfTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Timestamp_Sys100NS")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("BatteryFullChargedCapacity");
                });

            modelBuilder.Entity("GathererEngine.Models.BatteryStaticData", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("Capabilities")
                        .HasColumnType("bigint");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Chemistry")
                        .HasColumnType("bigint");

                    b.Property<long?>("CriticalBias")
                        .HasColumnType("bigint");

                    b.Property<long?>("DefaultAlert1")
                        .HasColumnType("bigint");

                    b.Property<long?>("DefaultAlert2")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DesignedCapacity")
                        .HasColumnType("bigint");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Frequency_Object")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Frequency_PerfTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Frequency_Sys100NS")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Granularity0")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Granularity1")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Granularity2")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Granularity3")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("InstanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManufactureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Tag")
                        .HasColumnType("bigint");

                    b.Property<byte?>("Technology")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Timestamp_Object")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Timestamp_PerfTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Timestamp_Sys100NS")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("UniqueID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("BatteryStaticData");
                });

            modelBuilder.Entity("GathererEngine.Models.BatteryStatus", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChargeRate")
                        .HasColumnType("int");

                    b.Property<bool?>("Charging")
                        .HasColumnType("bit");

                    b.Property<bool?>("Critical")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DischargeRate")
                        .HasColumnType("int");

                    b.Property<bool?>("Discharging")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Frequency_Object")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Frequency_PerfTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Frequency_Sys100NS")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("InstanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerOnline")
                        .HasColumnType("bit");

                    b.Property<long?>("RemainingCapacity")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tag")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Timestamp_Object")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Timestamp_PerfTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("Timestamp_Sys100NS")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Voltage")
                        .HasColumnType("bigint");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("BatteryStatus");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_BIOSElement", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BIOSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BiosCharacteristics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("EmbeddedControllerMajorVersion")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EmbeddedControllerMinorVersion")
                        .HasColumnType("tinyint");

                    b.Property<string>("IdentificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InstallableLanguages")
                        .HasColumnType("int");

                    b.Property<string>("LanguageEdition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListOfLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTargetOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PrimaryBIOS")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SMBIOSBIOSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SMBIOSMajorVersion")
                        .HasColumnType("int");

                    b.Property<int?>("SMBIOSMinorVersion")
                        .HasColumnType("int");

                    b.Property<bool?>("SMBIOSPresent")
                        .HasColumnType("bit");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareElementID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoftwareElementState")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SystemBiosMajorVersion")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("SystemBiosMinorVersion")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TargetOperatingSystem")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_BIOSElement");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Battery", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<long?>("BatteryRechargeTime")
                        .HasColumnType("bigint");

                    b.Property<int?>("BatteryStatus")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Chemistry")
                        .HasColumnType("int");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DesignCapacity")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DesignVoltage")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstimatedChargeRemaining")
                        .HasColumnType("int");

                    b.Property<long?>("EstimatedRunTime")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExpectedBatteryLife")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExpectedLife")
                        .HasColumnType("bigint");

                    b.Property<long?>("FullChargeCapacity")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxRechargeTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("SmartBatteryVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TimeOnBattery")
                        .HasColumnType("bigint");

                    b.Property<long?>("TimeToFullCharge")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Battery");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Card", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Depth")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<bool?>("HostingBoard")
                        .HasColumnType("bit");

                    b.Property<bool?>("HotSwappable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Removable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Replaceable")
                        .HasColumnType("bit");

                    b.Property<string>("RequirementsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiresDaughterBoard")
                        .HasColumnType("bit");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlotLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SpecialRequirements")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Card");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Chip", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Attributes")
                        .HasColumnType("bigint");

                    b.Property<string>("BankLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfiguredClockSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfiguredVoltage")
                        .HasColumnType("bigint");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataWidth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceLocator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormFactor")
                        .HasColumnType("int");

                    b.Property<bool?>("HotSwappable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InterleaveDataDepth")
                        .HasColumnType("int");

                    b.Property<long?>("InterleavePosition")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxVoltage")
                        .HasColumnType("bigint");

                    b.Property<int?>("MemoryType")
                        .HasColumnType("int");

                    b.Property<long?>("MinVoltage")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PositionInRow")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("Removable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Replaceable")
                        .HasColumnType("bit");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SMBIOSMemoryType")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Speed")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalWidth")
                        .HasColumnType("int");

                    b.Property<int?>("TypeDetail")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Chip");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_ComputerSystem", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminPasswordStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("AutomaticManagedPagefile")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetBootOption")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetCapability")
                        .HasColumnType("bit");

                    b.Property<int?>("BootOptionOnLimit")
                        .HasColumnType("int");

                    b.Property<int?>("BootOptionOnWatchDog")
                        .HasColumnType("int");

                    b.Property<bool?>("BootROMSupported")
                        .HasColumnType("bit");

                    b.Property<string>("BootStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BootupState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChassisBootupState")
                        .HasColumnType("int");

                    b.Property<string>("ChassisSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CurrentTimeZone")
                        .HasColumnType("smallint");

                    b.Property<string>("DNSHostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaylightInEffect")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomainRole")
                        .HasColumnType("int");

                    b.Property<bool?>("EnableDaylightSavingsTime")
                        .HasColumnType("bit");

                    b.Property<int?>("FrontPanelResetStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("HypervisorPresent")
                        .HasColumnType("bit");

                    b.Property<bool?>("InfraredSupported")
                        .HasColumnType("bit");

                    b.Property<string>("InitialLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KeyboardPasswordStatus")
                        .HasColumnType("int");

                    b.Property<string>("LastLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NetworkServerModeEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("NumberOfLogicalProcessors")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfProcessors")
                        .HasColumnType("bigint");

                    b.Property<string>("OEMLogoBitmap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OEMStringArray")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PCSystemType")
                        .HasColumnType("int");

                    b.Property<int?>("PCSystemTypeEx")
                        .HasColumnType("int");

                    b.Property<bool?>("PartOfDomain")
                        .HasColumnType("bit");

                    b.Property<long?>("PauseAfterReset")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("PowerOnPasswordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PowerState")
                        .HasColumnType("int");

                    b.Property<int?>("PowerSupplyState")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryOwnerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResetCapability")
                        .HasColumnType("int");

                    b.Property<short?>("ResetCount")
                        .HasColumnType("smallint");

                    b.Property<short?>("ResetLimit")
                        .HasColumnType("smallint");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportContactDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SystemStartupDelay")
                        .HasColumnType("int");

                    b.Property<string>("SystemStartupOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SystemStartupSetting")
                        .HasColumnType("tinyint");

                    b.Property<string>("SystemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThermalState")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPhysicalMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WakeUpType")
                        .HasColumnType("int");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<string>("Workgroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_ComputerSystem");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Controller", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Controller");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_CoolingDevice", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActiveCooling")
                        .HasColumnType("bit");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DesiredSpeed")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VariableSpeed")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_CoolingDevice");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_CurrentSensor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentReading")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLinear")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("LowerThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<int?>("MaxReadable")
                        .HasColumnType("int");

                    b.Property<int?>("MinReadable")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NominalReading")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMax")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMin")
                        .HasColumnType("int");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("Resolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tolerance")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_CurrentSensor");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_DesktopMonitor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<long?>("Bandwidth")
                        .HasColumnType("bigint");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayType")
                        .HasColumnType("int");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonitorManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonitorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PixelsPerXLogicalInch")
                        .HasColumnType("bigint");

                    b.Property<long?>("PixelsPerYLogicalInch")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("ScreenHeight")
                        .HasColumnType("bigint");

                    b.Property<long?>("ScreenWidth")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_DesktopMonitor");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_DiskDrive", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<long?>("BytesPerSector")
                        .HasColumnType("bigint");

                    b.Property<string>("Capabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompressionMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DefaultBlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmwareRevision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InterfaceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaxBlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("MaxMediaSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("MediaLoaded")
                        .HasColumnType("bit");

                    b.Property<string>("MediaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MinBlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NeedsCleaning")
                        .HasColumnType("bit");

                    b.Property<long?>("NumberOfMediaSupported")
                        .HasColumnType("bigint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Partitions")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("SCSIBus")
                        .HasColumnType("bigint");

                    b.Property<int?>("SCSILogicalUnit")
                        .HasColumnType("int");

                    b.Property<int?>("SCSIPort")
                        .HasColumnType("int");

                    b.Property<int?>("SCSITargetId")
                        .HasColumnType("int");

                    b.Property<long?>("SectorsPerTrack")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Signature")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalCylinders")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("TotalHeads")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalSectors")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("TotalTracks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("TracksPerCylinder")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_DiskDrive");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_DiskPartition", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("BootPartition")
                        .HasColumnType("bit");

                    b.Property<bool?>("Bootable")
                        .HasColumnType("bit");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DiskIndex")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HiddenSectors")
                        .HasColumnType("bigint");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrimaryPartition")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RewritePartition")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("StartingOffset")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_DiskPartition");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Display", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<long?>("Bandwidth")
                        .HasColumnType("bigint");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisplayType")
                        .HasColumnType("int");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonitorManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonitorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PixelsPerXLogicalInch")
                        .HasColumnType("bigint");

                    b.Property<long?>("PixelsPerYLogicalInch")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("ScreenHeight")
                        .HasColumnType("bigint");

                    b.Property<long?>("ScreenWidth")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Display");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Fan", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActiveCooling")
                        .HasColumnType("bit");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DesiredSpeed")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VariableSpeed")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Fan");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_InstalledOS", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupComponent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartComponent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PrimaryOS")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_InstalledOS");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Keyboard", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Layout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfFunctionKeys")
                        .HasColumnType("int");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Password")
                        .HasColumnType("int");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Keyboard");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_LogicalDisk", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Compressed")
                        .HasColumnType("bit");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DriveType")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FreeSpace")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumComponentLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaType")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("QuotasDisabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasIncomplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasRebuilding")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<bool?>("SupportsDiskQuotas")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsFileBasedCompression")
                        .HasColumnType("bit");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VolumeDirty")
                        .HasColumnType("bit");

                    b.Property<string>("VolumeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_LogicalDisk");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Memory", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalErrorData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Associativity")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("CacheSpeed")
                        .HasColumnType("bigint");

                    b.Property<int?>("CacheType")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<bool?>("CorrectableError")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentSRAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EndingAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("ErrorAccess")
                        .HasColumnType("int");

                    b.Property<decimal?>("ErrorAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<int?>("ErrorCorrectType")
                        .HasColumnType("int");

                    b.Property<string>("ErrorData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ErrorDataOrder")
                        .HasColumnType("int");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ErrorInfo")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ErrorResolution")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("ErrorTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ErrorTransferSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("FlushTimer")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InstalledSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<long?>("LineSize")
                        .HasColumnType("bigint");

                    b.Property<int?>("Location")
                        .HasColumnType("int");

                    b.Property<long?>("MaxCacheSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("OtherErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReadPolicy")
                        .HasColumnType("int");

                    b.Property<int?>("ReplacementPolicy")
                        .HasColumnType("int");

                    b.Property<decimal?>("StartingAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SupportedSRAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SystemLevelAddress")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<int?>("WritePolicy")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Memory");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_NetworkAdapter", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdapterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AdapterTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("AutoSense")
                        .HasColumnType("bit");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Installed")
                        .HasColumnType("bit");

                    b.Property<long?>("InterfaceIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MaxSpeed")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetConnectionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NetConnectionStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("NetEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("NetworkAddresses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PhysicalAdapter")
                        .HasColumnType("bit");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Speed")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_NetworkAdapter");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_NumericSensor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentReading")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLinear")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("LowerThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<int?>("MaxReadable")
                        .HasColumnType("int");

                    b.Property<int?>("MinReadable")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NominalReading")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMax")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMin")
                        .HasColumnType("int");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("Resolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tolerance")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_NumericSensor");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_OperatingSystem", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BootDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSDVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CurrentTimeZone")
                        .HasColumnType("smallint");

                    b.Property<bool?>("DataExecutionPrevention_32BitApplications")
                        .HasColumnType("bit");

                    b.Property<bool?>("DataExecutionPrevention_Available")
                        .HasColumnType("bit");

                    b.Property<bool?>("DataExecutionPrevention_Drivers")
                        .HasColumnType("bit");

                    b.Property<byte?>("DataExecutionPrevention_SupportPolicy")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Debug")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Distributed")
                        .HasColumnType("bit");

                    b.Property<long?>("EncryptionLevel")
                        .HasColumnType("bigint");

                    b.Property<byte?>("ForegroundApplicationBoost")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("FreePhysicalMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("FreeSpaceInPagingFiles")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("FreeVirtualMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LargeSystemCache")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastBootUpTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LocalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MUILanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxNumberOfProcesses")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MaxProcessMemorySize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NumberOfLicensedUsers")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfProcesses")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfUsers")
                        .HasColumnType("bigint");

                    b.Property<string>("OSArchitecture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OSLanguage")
                        .HasColumnType("bigint");

                    b.Property<long?>("OSProductSuite")
                        .HasColumnType("bigint");

                    b.Property<int?>("OSType")
                        .HasColumnType("int");

                    b.Property<long?>("OperatingSystemSKU")
                        .HasColumnType("bigint");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PAEEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PlusProductID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlusVersionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PortableOperatingSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("Primary")
                        .HasColumnType("bit");

                    b.Property<long?>("ProductType")
                        .HasColumnType("bigint");

                    b.Property<string>("RegisteredUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicePackMajorVersion")
                        .HasColumnType("int");

                    b.Property<int?>("ServicePackMinorVersion")
                        .HasColumnType("int");

                    b.Property<decimal?>("SizeStoredInPagingFiles")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SuiteMask")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemDirectory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemDrive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalSwapSpaceSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("TotalVirtualMemorySize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("TotalVisibleMemorySize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowsDirectory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_OperatingSystem");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PCVideoController", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceleratorCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdapterCompatibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdapterDACType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AdapterRAM")
                        .HasColumnType("bigint");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ColorTableEntries")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentBitsPerPixel")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentHorizontalResolution")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CurrentNumberOfColors")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("CurrentNumberOfColumns")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentNumberOfRows")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrentScanMode")
                        .HasColumnType("int");

                    b.Property<long?>("CurrentVerticalResolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeviceSpecificPens")
                        .HasColumnType("bigint");

                    b.Property<long?>("DitherType")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DriverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ICMIntent")
                        .HasColumnType("bigint");

                    b.Property<long?>("ICMMethod")
                        .HasColumnType("bigint");

                    b.Property<string>("InfFilename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstalledDisplayDrivers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxMemorySupported")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Monochrome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfColorPlanes")
                        .HasColumnType("int");

                    b.Property<long?>("NumberOfVideoPages")
                        .HasColumnType("bigint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<long?>("ReservedSystemPaletteEntries")
                        .HasColumnType("bigint");

                    b.Property<long?>("SpecificationVersion")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SystemPaletteEntries")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VideoArchitecture")
                        .HasColumnType("int");

                    b.Property<int?>("VideoMemoryType")
                        .HasColumnType("int");

                    b.Property<int?>("VideoMode")
                        .HasColumnType("int");

                    b.Property<string>("VideoModeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoProcessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_PCVideoController");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PhysicalConnector", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectorPinout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentUsage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeviceNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("FunctionNumber")
                        .HasColumnType("bigint");

                    b.Property<float?>("HeightAllowed")
                        .HasColumnType("real");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("LengthAllowed")
                        .HasColumnType("real");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDataWidth")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PMESignal")
                        .HasColumnType("bit");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<string>("PurposeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SegmentGroupNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Shared")
                        .HasColumnType("bit");

                    b.Property<string>("SlotDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SpecialPurpose")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SupportsHotPlug")
                        .HasColumnType("bit");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ThermalRating")
                        .HasColumnType("bigint");

                    b.Property<string>("VccMixedVoltageSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VppMixedVoltageSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_PhysicalConnector");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PhysicalElement", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Depth")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<bool?>("HostingBoard")
                        .HasColumnType("bit");

                    b.Property<bool?>("HotSwappable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Removable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Replaceable")
                        .HasColumnType("bit");

                    b.Property<string>("RequirementsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiresDaughterBoard")
                        .HasColumnType("bit");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlotLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SpecialRequirements")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_PhysicalElement");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PhysicalMemory", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Attributes")
                        .HasColumnType("bigint");

                    b.Property<string>("BankLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfiguredClockSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfiguredVoltage")
                        .HasColumnType("bigint");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataWidth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceLocator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormFactor")
                        .HasColumnType("int");

                    b.Property<bool?>("HotSwappable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InterleaveDataDepth")
                        .HasColumnType("int");

                    b.Property<long?>("InterleavePosition")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxVoltage")
                        .HasColumnType("bigint");

                    b.Property<int?>("MemoryType")
                        .HasColumnType("int");

                    b.Property<long?>("MinVoltage")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PositionInRow")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("Removable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Replaceable")
                        .HasColumnType("bit");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SMBIOSMemoryType")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Speed")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalWidth")
                        .HasColumnType("int");

                    b.Property<int?>("TypeDetail")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_PhysicalMemory");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PointingDevice", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceInterface")
                        .HasColumnType("int");

                    b.Property<long?>("DoubleSpeedThreshold")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Handedness")
                        .HasColumnType("int");

                    b.Property<string>("HardwareType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("NumberOfButtons")
                        .HasColumnType("tinyint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointingType")
                        .HasColumnType("int");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("QuadSpeedThreshold")
                        .HasColumnType("bigint");

                    b.Property<long?>("Resolution")
                        .HasColumnType("bigint");

                    b.Property<long?>("SampleRate")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<long?>("Synch")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_PointingDevice");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Printer", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Attributes")
                        .HasColumnType("bigint");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("AvailableJobSheets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AveragePagesPerMinute")
                        .HasColumnType("bigint");

                    b.Property<string>("Capabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharSetsSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCharSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentLanguage")
                        .HasColumnType("int");

                    b.Property<string>("CurrentMimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentNaturalLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPaperType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Default")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DefaultCopies")
                        .HasColumnType("bigint");

                    b.Property<int?>("DefaultLanguage")
                        .HasColumnType("int");

                    b.Property<string>("DefaultMimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DefaultNumberUp")
                        .HasColumnType("bigint");

                    b.Property<string>("DefaultPaperType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DefaultPriority")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DetectedErrorState")
                        .HasColumnType("int");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Direct")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoCompleteFirst")
                        .HasColumnType("bit");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableBIDI")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDevQueryPrint")
                        .HasColumnType("bit");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExtendedDetectedErrorState")
                        .HasColumnType("int");

                    b.Property<int?>("ExtendedPrinterStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("Hidden")
                        .HasColumnType("bit");

                    b.Property<long?>("HorizontalResolution")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("JobCountSinceLastReset")
                        .HasColumnType("bigint");

                    b.Property<bool?>("KeepPrintedJobs")
                        .HasColumnType("bit");

                    b.Property<string>("LanguagesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Local")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarkingTechnology")
                        .HasColumnType("int");

                    b.Property<long?>("MaxCopies")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberUp")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxSizeSupported")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeTypesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaturalLanguagesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Network")
                        .HasColumnType("bit");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperSizesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperTypesAvailable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("PrintJobDataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintProcessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrinterPaperNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PrinterState")
                        .HasColumnType("bigint");

                    b.Property<int?>("PrinterStatus")
                        .HasColumnType("int");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Published")
                        .HasColumnType("bit");

                    b.Property<bool?>("Queued")
                        .HasColumnType("bit");

                    b.Property<bool?>("RawOnly")
                        .HasColumnType("bit");

                    b.Property<string>("SeparatorFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Shared")
                        .HasColumnType("bit");

                    b.Property<bool?>("SpoolEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UntilTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("VerticalResolution")
                        .HasColumnType("bigint");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<bool?>("WorkOffline")
                        .HasColumnType("bit");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Printer");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Process", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutablePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExecutionState")
                        .HasColumnType("int");

                    b.Property<string>("Handle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HandleCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("KernelModeTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("MaximumWorkingSetSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinimumWorkingSetSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OtherOperationCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("OtherTransferCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("PageFaults")
                        .HasColumnType("bigint");

                    b.Property<long?>("PageFileUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentProcessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PeakPageFileUsage")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PeakVirtualSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("PeakWorkingSetSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PrivatePageCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaNonPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaPeakNonPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaPeakPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ReadOperationCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("ReadTransferCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ThreadCount")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserModeTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VirtualSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("WindowsVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("WorkingSetSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("WriteOperationCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("WriteTransferCount")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Process");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Processor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressWidth")
                        .HasColumnType("int");

                    b.Property<int?>("Architecture")
                        .HasColumnType("int");

                    b.Property<string>("AssetTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Characteristics")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<int?>("CpuStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentClockSpeed")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrentVoltage")
                        .HasColumnType("int");

                    b.Property<int?>("DataWidth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExtClock")
                        .HasColumnType("bigint");

                    b.Property<int?>("Family")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("L2CacheSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("L2CacheSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("L3CacheSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("L3CacheSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("LoadPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxClockSpeed")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NumberOfCores")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfEnabledCore")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfLogicalProcessors")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherFamilyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessorType")
                        .HasColumnType("int");

                    b.Property<int?>("Revision")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SecondLevelAddressTranslationExtensions")
                        .HasColumnType("bit");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocketDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("Stepping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ThreadCount")
                        .HasColumnType("bigint");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpgradeMethod")
                        .HasColumnType("int");

                    b.Property<bool?>("VMMonitorModeExtensions")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VirtualizationFirmwareEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("VoltageCaps")
                        .HasColumnType("bigint");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Processor");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Product", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentifyingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Product");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_SCSIController", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<long?>("ControllerTimeouts")
                        .HasColumnType("bigint");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxDataWidth")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MaxTransferRate")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtectionManagement")
                        .HasColumnType("int");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_SCSIController");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Sensor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentReading")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLinear")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("LowerThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<int?>("MaxReadable")
                        .HasColumnType("int");

                    b.Property<int?>("MinReadable")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NominalReading")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMax")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMin")
                        .HasColumnType("int");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("Resolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tolerance")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Sensor");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_SerialController", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<bool?>("Binary")
                        .HasColumnType("bit");

                    b.Property<string>("Capabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxBaudRate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumInputBufferSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumOutputBufferSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OSAutoDiscovered")
                        .HasColumnType("bit");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<string>("ProviderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SettableBaudRate")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableDataBits")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableFlowControl")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableParity")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableParityCheck")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableRLSD")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableStopBits")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<bool?>("Supports16BitMode")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsDTRDSR")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsElapsedTimeouts")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsIntTimeouts")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsParityCheck")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsRLSD")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsRTSCTS")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsSpecialCharacters")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsXOnXOff")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsXOnXOffSet")
                        .HasColumnType("bit");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_SerialController");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Slot", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BusNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectorPinout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentUsage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeviceNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("FunctionNumber")
                        .HasColumnType("bigint");

                    b.Property<float?>("HeightAllowed")
                        .HasColumnType("real");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("LengthAllowed")
                        .HasColumnType("real");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDataWidth")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PMESignal")
                        .HasColumnType("bit");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<string>("PurposeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SegmentGroupNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Shared")
                        .HasColumnType("bit");

                    b.Property<string>("SlotDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SpecialPurpose")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SupportsHotPlug")
                        .HasColumnType("bit");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ThermalRating")
                        .HasColumnType("bigint");

                    b.Property<string>("VccMixedVoltageSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VppMixedVoltageSupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_Slot");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_StorageVolume", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<bool?>("Automount")
                        .HasColumnType("bit");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("BootVolume")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Compressed")
                        .HasColumnType("bit");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DirtyBitSet")
                        .HasColumnType("bit");

                    b.Property<string>("DriveLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DriveType")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FreeSpace")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("IndexingEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumFileNameLength")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PageFilePresent")
                        .HasColumnType("bit");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("QuotasEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasIncomplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasRebuilding")
                        .HasColumnType("bit");

                    b.Property<long?>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<bool?>("SupportsDiskQuotas")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsFileBasedCompression")
                        .HasColumnType("bit");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SystemVolume")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_StorageVolume");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_System", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminPasswordStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("AutomaticManagedPagefile")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetBootOption")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetCapability")
                        .HasColumnType("bit");

                    b.Property<int?>("BootOptionOnLimit")
                        .HasColumnType("int");

                    b.Property<int?>("BootOptionOnWatchDog")
                        .HasColumnType("int");

                    b.Property<bool?>("BootROMSupported")
                        .HasColumnType("bit");

                    b.Property<string>("BootStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BootupState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChassisBootupState")
                        .HasColumnType("int");

                    b.Property<string>("ChassisSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CurrentTimeZone")
                        .HasColumnType("smallint");

                    b.Property<string>("DNSHostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaylightInEffect")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomainRole")
                        .HasColumnType("int");

                    b.Property<bool?>("EnableDaylightSavingsTime")
                        .HasColumnType("bit");

                    b.Property<int?>("FrontPanelResetStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("HypervisorPresent")
                        .HasColumnType("bit");

                    b.Property<bool?>("InfraredSupported")
                        .HasColumnType("bit");

                    b.Property<string>("InitialLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KeyboardPasswordStatus")
                        .HasColumnType("int");

                    b.Property<string>("LastLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NetworkServerModeEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("NumberOfLogicalProcessors")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfProcessors")
                        .HasColumnType("bigint");

                    b.Property<string>("OEMLogoBitmap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OEMStringArray")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PCSystemType")
                        .HasColumnType("int");

                    b.Property<int?>("PCSystemTypeEx")
                        .HasColumnType("int");

                    b.Property<bool?>("PartOfDomain")
                        .HasColumnType("bit");

                    b.Property<long?>("PauseAfterReset")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("PowerOnPasswordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PowerState")
                        .HasColumnType("int");

                    b.Property<int?>("PowerSupplyState")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryOwnerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResetCapability")
                        .HasColumnType("int");

                    b.Property<short?>("ResetCount")
                        .HasColumnType("smallint");

                    b.Property<short?>("ResetLimit")
                        .HasColumnType("smallint");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportContactDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SystemStartupDelay")
                        .HasColumnType("int");

                    b.Property<string>("SystemStartupOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SystemStartupSetting")
                        .HasColumnType("tinyint");

                    b.Property<string>("SystemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThermalState")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPhysicalMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WakeUpType")
                        .HasColumnType("int");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<string>("Workgroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_System");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_TemperatureSensor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentReading")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLinear")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("LowerThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<int?>("MaxReadable")
                        .HasColumnType("int");

                    b.Property<int?>("MinReadable")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NominalReading")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMax")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMin")
                        .HasColumnType("int");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("Resolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tolerance")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_TemperatureSensor");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_USBController", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_USBController");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_USBDevice", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ClassCode")
                        .HasColumnType("tinyint");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAlternateSettings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("CurrentConfigValue")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GangSwitched")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("NumberOfConfigs")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("NumberOfPorts")
                        .HasColumnType("tinyint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<byte?>("ProtocolCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<byte?>("SubclassCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("USBVersion")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_USBDevice");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_UnitaryComputerSystem", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminPasswordStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("AutomaticManagedPagefile")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetBootOption")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetCapability")
                        .HasColumnType("bit");

                    b.Property<int?>("BootOptionOnLimit")
                        .HasColumnType("int");

                    b.Property<int?>("BootOptionOnWatchDog")
                        .HasColumnType("int");

                    b.Property<bool?>("BootROMSupported")
                        .HasColumnType("bit");

                    b.Property<string>("BootStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BootupState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChassisBootupState")
                        .HasColumnType("int");

                    b.Property<string>("ChassisSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CurrentTimeZone")
                        .HasColumnType("smallint");

                    b.Property<string>("DNSHostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaylightInEffect")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomainRole")
                        .HasColumnType("int");

                    b.Property<bool?>("EnableDaylightSavingsTime")
                        .HasColumnType("bit");

                    b.Property<int?>("FrontPanelResetStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("HypervisorPresent")
                        .HasColumnType("bit");

                    b.Property<bool?>("InfraredSupported")
                        .HasColumnType("bit");

                    b.Property<string>("InitialLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KeyboardPasswordStatus")
                        .HasColumnType("int");

                    b.Property<string>("LastLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NetworkServerModeEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("NumberOfLogicalProcessors")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfProcessors")
                        .HasColumnType("bigint");

                    b.Property<string>("OEMLogoBitmap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OEMStringArray")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PCSystemType")
                        .HasColumnType("int");

                    b.Property<int?>("PCSystemTypeEx")
                        .HasColumnType("int");

                    b.Property<bool?>("PartOfDomain")
                        .HasColumnType("bit");

                    b.Property<long?>("PauseAfterReset")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("PowerOnPasswordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PowerState")
                        .HasColumnType("int");

                    b.Property<int?>("PowerSupplyState")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryOwnerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResetCapability")
                        .HasColumnType("int");

                    b.Property<short?>("ResetCount")
                        .HasColumnType("smallint");

                    b.Property<short?>("ResetLimit")
                        .HasColumnType("smallint");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportContactDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SystemStartupDelay")
                        .HasColumnType("int");

                    b.Property<string>("SystemStartupOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SystemStartupSetting")
                        .HasColumnType("tinyint");

                    b.Property<string>("SystemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThermalState")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPhysicalMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WakeUpType")
                        .HasColumnType("int");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<string>("Workgroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_UnitaryComputerSystem");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VideoController", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceleratorCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdapterCompatibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdapterDACType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AdapterRAM")
                        .HasColumnType("bigint");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ColorTableEntries")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentBitsPerPixel")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentHorizontalResolution")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CurrentNumberOfColors")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("CurrentNumberOfColumns")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentNumberOfRows")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrentScanMode")
                        .HasColumnType("int");

                    b.Property<long?>("CurrentVerticalResolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeviceSpecificPens")
                        .HasColumnType("bigint");

                    b.Property<long?>("DitherType")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DriverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ICMIntent")
                        .HasColumnType("bigint");

                    b.Property<long?>("ICMMethod")
                        .HasColumnType("bigint");

                    b.Property<string>("InfFilename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstalledDisplayDrivers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxMemorySupported")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Monochrome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfColorPlanes")
                        .HasColumnType("int");

                    b.Property<long?>("NumberOfVideoPages")
                        .HasColumnType("bigint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<long?>("ReservedSystemPaletteEntries")
                        .HasColumnType("bigint");

                    b.Property<long?>("SpecificationVersion")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SystemPaletteEntries")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VideoArchitecture")
                        .HasColumnType("int");

                    b.Property<int?>("VideoMemoryType")
                        .HasColumnType("int");

                    b.Property<int?>("VideoMode")
                        .HasColumnType("int");

                    b.Property<string>("VideoModeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoProcessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_VideoController");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VideoControllerResolution", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HorizontalResolution")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfColors")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("RefreshRate")
                        .HasColumnType("bigint");

                    b.Property<int?>("ScanMode")
                        .HasColumnType("int");

                    b.Property<string>("SettingID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("VerticalResolution")
                        .HasColumnType("bigint");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_VideoControllerResolution");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VideoSetting", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Element")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_VideoSetting");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VoltageSensor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentReading")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLinear")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("LowerThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("LowerThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<int?>("MaxReadable")
                        .HasColumnType("int");

                    b.Property<int?>("MinReadable")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NominalReading")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMax")
                        .HasColumnType("int");

                    b.Property<int?>("NormalMin")
                        .HasColumnType("int");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("Resolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tolerance")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdCritical")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdFatal")
                        .HasColumnType("int");

                    b.Property<int?>("UpperThresholdNonCritical")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("CIM_VoltageSensor");
                });

            modelBuilder.Entity("GathererEngine.Models.MSAcpi_ThermalZoneTemperature", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ActiveTripPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ActiveTripPointCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("CriticalTripPoint")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentTemperature")
                        .HasColumnType("bigint");

                    b.Property<string>("InstanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PassiveTripPoint")
                        .HasColumnType("bigint");

                    b.Property<long?>("Reserved")
                        .HasColumnType("bigint");

                    b.Property<long?>("SamplingPeriod")
                        .HasColumnType("bigint");

                    b.Property<long?>("ThermalConstant1")
                        .HasColumnType("bigint");

                    b.Property<long?>("ThermalConstant2")
                        .HasColumnType("bigint");

                    b.Property<long?>("ThermalStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("MSAcpi_ThermalZoneTemperature");
                });

            modelBuilder.Entity("GathererEngine.Models.MSFT_PhysicalDisk", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdapterSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AllocatedSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("BusType")
                        .HasColumnType("int");

                    b.Property<bool?>("CanPool")
                        .HasColumnType("bit");

                    b.Property<string>("CannotPoolReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnclosureNumber")
                        .HasColumnType("int");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HealthStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("IsIndicationEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPartial")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LogicalSectorSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MediaType")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationalDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCannotPoolReasonDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassThroughClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassThroughIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassThroughNamespace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassThroughServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PhysicalSectorSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("SlotNumber")
                        .HasColumnType("int");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SpindleSpeed")
                        .HasColumnType("bigint");

                    b.Property<string>("StoragePoolUniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportedUsages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UniqueIdFormat")
                        .HasColumnType("int");

                    b.Property<int?>("Usage")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VirtualDiskFootprint")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("MSFT_PhysicalDisk");
                });

            modelBuilder.Entity("GathererEngine.Models.SoftwareLicensingProduct", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADActivationCsvlkPid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ADActivationCsvlkSkuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ADActivationObjectDN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ADActivationObjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutomaticVMActivationHostDigitalPid2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutomaticVMActivationHostMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AutomaticVMActivationLastActivationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscoveredKeyManagementServiceMachineIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscoveredKeyManagementServiceMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DiscoveredKeyManagementServiceMachinePort")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EvaluationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ExtendedGrace")
                        .HasColumnType("bigint");

                    b.Property<long?>("GenuineStatus")
                        .HasColumnType("bigint");

                    b.Property<long?>("GracePeriodRemaining")
                        .HasColumnType("bigint");

                    b.Property<string>("IAID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IsKeyManagementServiceMachine")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceCurrentCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceFailedRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceLicensedRequests")
                        .HasColumnType("bigint");

                    b.Property<string>("KeyManagementServiceLookupDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyManagementServiceMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("KeyManagementServiceNonGenuineGraceRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceNotificationRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceOOBGraceRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceOOTGraceRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServicePort")
                        .HasColumnType("bigint");

                    b.Property<string>("KeyManagementServiceProductKeyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("KeyManagementServiceTotalRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceUnlicensedRequests")
                        .HasColumnType("bigint");

                    b.Property<string>("LicenseDependsOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LicenseIsAddon")
                        .HasColumnType("bit");

                    b.Property<long?>("LicenseStatus")
                        .HasColumnType("bigint");

                    b.Property<long?>("LicenseStatusReason")
                        .HasColumnType("bigint");

                    b.Property<string>("MachineURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfflineInstallationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartialProductKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessorURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductKeyChannel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductKeyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductKeyID2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductKeyURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RemainingAppReArmCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("RemainingSkuReArmCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("RequiredClientCount")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenActivationAdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenActivationCertificateThumbprint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TokenActivationGrantNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenActivationILID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TokenActivationILVID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TrustedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UseLicenseURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("VLActivationInterval")
                        .HasColumnType("bigint");

                    b.Property<long?>("VLActivationType")
                        .HasColumnType("bigint");

                    b.Property<long?>("VLActivationTypeEnabled")
                        .HasColumnType("bigint");

                    b.Property<long?>("VLRenewalInterval")
                        .HasColumnType("bigint");

                    b.Property<string>("ValidationURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("SoftwareLicensingProduct");
                });

            modelBuilder.Entity("GathererEngine.Models.SoftwareLicensingService", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientMachineID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscoveredKeyManagementServiceMachineIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscoveredKeyManagementServiceMachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DiscoveredKeyManagementServiceMachinePort")
                        .HasColumnType("bigint");

                    b.Property<long?>("IsKeyManagementServiceMachine")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceCurrentCount")
                        .HasColumnType("bigint");

                    b.Property<bool?>("KeyManagementServiceDnsPublishing")
                        .HasColumnType("bit");

                    b.Property<long?>("KeyManagementServiceFailedRequests")
                        .HasColumnType("bigint");

                    b.Property<bool?>("KeyManagementServiceHostCaching")
                        .HasColumnType("bit");

                    b.Property<long?>("KeyManagementServiceLicensedRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceListeningPort")
                        .HasColumnType("bigint");

                    b.Property<string>("KeyManagementServiceLookupDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("KeyManagementServiceLowPriority")
                        .HasColumnType("bit");

                    b.Property<string>("KeyManagementServiceMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("KeyManagementServiceNonGenuineGraceRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceNotificationRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceOOBGraceRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceOOTGraceRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServicePort")
                        .HasColumnType("bigint");

                    b.Property<string>("KeyManagementServiceProductKeyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("KeyManagementServiceTotalRequests")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeyManagementServiceUnlicensedRequests")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OA2xBiosMarkerMinorVersion")
                        .HasColumnType("bigint");

                    b.Property<long?>("OA2xBiosMarkerStatus")
                        .HasColumnType("bigint");

                    b.Property<string>("OA3xOriginalProductKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OA3xOriginalProductKeyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OA3xOriginalProductKeyPkPn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PolicyCacheRefreshRequired")
                        .HasColumnType("bigint");

                    b.Property<long?>("RemainingWindowsReArmCount")
                        .HasColumnType("bigint");

                    b.Property<long?>("RequiredClientCount")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenActivationAdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenActivationCertificateThumbprint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TokenActivationGrantNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("TokenActivationILID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TokenActivationILVID")
                        .HasColumnType("bigint");

                    b.Property<long?>("VLActivationInterval")
                        .HasColumnType("bigint");

                    b.Property<long?>("VLRenewalInterval")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("SoftwareLicensingService");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Account", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("LocalAccount")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SIDType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Account");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_AssociatedProcessorMemory", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Antecedent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BusSpeed")
                        .HasColumnType("bigint");

                    b.Property<string>("Dependent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_AssociatedProcessorMemory");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_BIOS", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BIOSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BiosCharacteristics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("EmbeddedControllerMajorVersion")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("EmbeddedControllerMinorVersion")
                        .HasColumnType("tinyint");

                    b.Property<string>("IdentificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InstallableLanguages")
                        .HasColumnType("int");

                    b.Property<string>("LanguageEdition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListOfLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTargetOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PrimaryBIOS")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SMBIOSBIOSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SMBIOSMajorVersion")
                        .HasColumnType("int");

                    b.Property<int?>("SMBIOSMinorVersion")
                        .HasColumnType("int");

                    b.Property<bool?>("SMBIOSPresent")
                        .HasColumnType("bit");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareElementID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoftwareElementState")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SystemBiosMajorVersion")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("SystemBiosMinorVersion")
                        .HasColumnType("tinyint");

                    b.Property<int?>("TargetOperatingSystem")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_BIOS");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_BaseBoard", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Depth")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Height")
                        .HasColumnType("real");

                    b.Property<bool?>("HostingBoard")
                        .HasColumnType("bit");

                    b.Property<bool?>("HotSwappable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Removable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Replaceable")
                        .HasColumnType("bit");

                    b.Property<string>("RequirementsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiresDaughterBoard")
                        .HasColumnType("bit");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlotLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SpecialRequirements")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_BaseBoard");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Battery", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<long?>("BatteryRechargeTime")
                        .HasColumnType("bigint");

                    b.Property<int?>("BatteryStatus")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Chemistry")
                        .HasColumnType("int");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DesignCapacity")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DesignVoltage")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstimatedChargeRemaining")
                        .HasColumnType("int");

                    b.Property<long?>("EstimatedRunTime")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExpectedBatteryLife")
                        .HasColumnType("bigint");

                    b.Property<long?>("ExpectedLife")
                        .HasColumnType("bigint");

                    b.Property<long?>("FullChargeCapacity")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxRechargeTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("SmartBatteryVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TimeOnBattery")
                        .HasColumnType("bigint");

                    b.Property<long?>("TimeToFullCharge")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Battery");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Bus", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<long?>("BusNum")
                        .HasColumnType("bigint");

                    b.Property<long?>("BusType")
                        .HasColumnType("bigint");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Bus");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_CDROMDrive", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_CDROMDrive");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_CacheMemory", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalErrorData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Associativity")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("CacheSpeed")
                        .HasColumnType("bigint");

                    b.Property<int?>("CacheType")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<bool?>("CorrectableError")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentSRAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EndingAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("ErrorAccess")
                        .HasColumnType("int");

                    b.Property<decimal?>("ErrorAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<int?>("ErrorCorrectType")
                        .HasColumnType("int");

                    b.Property<string>("ErrorData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ErrorDataOrder")
                        .HasColumnType("int");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ErrorInfo")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ErrorResolution")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("ErrorTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ErrorTransferSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("FlushTimer")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InstalledSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<long?>("LineSize")
                        .HasColumnType("bigint");

                    b.Property<int?>("Location")
                        .HasColumnType("int");

                    b.Property<long?>("MaxCacheSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("OtherErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReadPolicy")
                        .HasColumnType("int");

                    b.Property<int?>("ReplacementPolicy")
                        .HasColumnType("int");

                    b.Property<decimal?>("StartingAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SupportedSRAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SystemLevelAddress")
                        .HasColumnType("bit");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<int?>("WritePolicy")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_CacheMemory");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_ComputerSystem", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminPasswordStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("AutomaticManagedPagefile")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetBootOption")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutomaticResetCapability")
                        .HasColumnType("bit");

                    b.Property<int?>("BootOptionOnLimit")
                        .HasColumnType("int");

                    b.Property<int?>("BootOptionOnWatchDog")
                        .HasColumnType("int");

                    b.Property<bool?>("BootROMSupported")
                        .HasColumnType("bit");

                    b.Property<string>("BootStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BootupState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChassisBootupState")
                        .HasColumnType("int");

                    b.Property<string>("ChassisSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CurrentTimeZone")
                        .HasColumnType("smallint");

                    b.Property<string>("DNSHostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DaylightInEffect")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomainRole")
                        .HasColumnType("int");

                    b.Property<bool?>("EnableDaylightSavingsTime")
                        .HasColumnType("bit");

                    b.Property<int?>("FrontPanelResetStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("HypervisorPresent")
                        .HasColumnType("bit");

                    b.Property<bool?>("InfraredSupported")
                        .HasColumnType("bit");

                    b.Property<string>("InitialLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KeyboardPasswordStatus")
                        .HasColumnType("int");

                    b.Property<string>("LastLoadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NetworkServerModeEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("NumberOfLogicalProcessors")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfProcessors")
                        .HasColumnType("bigint");

                    b.Property<string>("OEMLogoBitmap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OEMStringArray")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PCSystemType")
                        .HasColumnType("int");

                    b.Property<int?>("PCSystemTypeEx")
                        .HasColumnType("int");

                    b.Property<bool?>("PartOfDomain")
                        .HasColumnType("bit");

                    b.Property<long?>("PauseAfterReset")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("PowerOnPasswordStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PowerState")
                        .HasColumnType("int");

                    b.Property<int?>("PowerSupplyState")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryOwnerContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResetCapability")
                        .HasColumnType("int");

                    b.Property<short?>("ResetCount")
                        .HasColumnType("smallint");

                    b.Property<short?>("ResetLimit")
                        .HasColumnType("smallint");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportContactDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemSKUNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SystemStartupDelay")
                        .HasColumnType("int");

                    b.Property<string>("SystemStartupOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("SystemStartupSetting")
                        .HasColumnType("tinyint");

                    b.Property<string>("SystemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThermalState")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPhysicalMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WakeUpType")
                        .HasColumnType("int");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<string>("Workgroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_ComputerSystem");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_DiskDrive", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<long?>("BytesPerSector")
                        .HasColumnType("bigint");

                    b.Property<string>("Capabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompressionMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DefaultBlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmwareRevision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InterfaceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaxBlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("MaxMediaSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("MediaLoaded")
                        .HasColumnType("bit");

                    b.Property<string>("MediaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MinBlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NeedsCleaning")
                        .HasColumnType("bit");

                    b.Property<long?>("NumberOfMediaSupported")
                        .HasColumnType("bigint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Partitions")
                        .HasColumnType("bigint");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("SCSIBus")
                        .HasColumnType("bigint");

                    b.Property<int?>("SCSILogicalUnit")
                        .HasColumnType("int");

                    b.Property<int?>("SCSIPort")
                        .HasColumnType("int");

                    b.Property<int?>("SCSITargetId")
                        .HasColumnType("int");

                    b.Property<long?>("SectorsPerTrack")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Signature")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalCylinders")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("TotalHeads")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalSectors")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("TotalTracks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("TracksPerCylinder")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_DiskDrive");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_DiskPartition", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("BootPartition")
                        .HasColumnType("bit");

                    b.Property<bool?>("Bootable")
                        .HasColumnType("bit");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DiskIndex")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HiddenSectors")
                        .HasColumnType("bigint");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<bool?>("PrimaryPartition")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RewritePartition")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("StartingOffset")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_DiskPartition");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Fan", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActiveCooling")
                        .HasColumnType("bit");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DesiredSpeed")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VariableSpeed")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Fan");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Keyboard", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Layout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfFunctionKeys")
                        .HasColumnType("int");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Password")
                        .HasColumnType("int");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Keyboard");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_LogicalDisk", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Compressed")
                        .HasColumnType("bit");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DriveType")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FreeSpace")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumComponentLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("MediaType")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("QuotasDisabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasIncomplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasRebuilding")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<bool?>("SupportsDiskQuotas")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsFileBasedCompression")
                        .HasColumnType("bit");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VolumeDirty")
                        .HasColumnType("bit");

                    b.Property<string>("VolumeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolumeSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_LogicalDisk");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_MotherboardDevice", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("PrimaryBusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevisionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryBusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_MotherboardDevice");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_NetworkAdapter", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdapterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AdapterTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("AutoSense")
                        .HasColumnType("bit");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Installed")
                        .HasColumnType("bit");

                    b.Property<long?>("InterfaceIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MaxSpeed")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetConnectionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NetConnectionStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("NetEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("NetworkAddresses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PhysicalAdapter")
                        .HasColumnType("bit");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Speed")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_NetworkAdapter");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_NetworkAdapterConfiguration", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ArpAlwaysSourceRoute")
                        .HasColumnType("bit");

                    b.Property<bool?>("ArpUseEtherSNAP")
                        .HasColumnType("bit");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DHCPEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DHCPLeaseExpires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DHCPLeaseObtained")
                        .HasColumnType("datetime2");

                    b.Property<string>("DHCPServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNSDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNSDomainSuffixSearchOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DNSEnabledForWINSResolution")
                        .HasColumnType("bit");

                    b.Property<string>("DNSHostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNSServerSearchOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabasePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DeadGWDetectEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultIPGateway")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("DefaultTOS")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("DefaultTTL")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DomainDNSRegistrationEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("ForwardBufferMemory")
                        .HasColumnType("bigint");

                    b.Property<bool?>("FullDNSRegistrationEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("GatewayCostMetric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("IGMPLevel")
                        .HasColumnType("tinyint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IPConnectionMetric")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IPEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IPFilterSecurityEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IPPortSecurityEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("IPSecPermitIPProtocols")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSecPermitTCPPorts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSecPermitUDPPorts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPSubnet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IPUseZeroBroadcast")
                        .HasColumnType("bit");

                    b.Property<string>("IPXAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IPXEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("IPXFrameType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IPXMediaType")
                        .HasColumnType("bigint");

                    b.Property<string>("IPXNetworkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPXVirtualNetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Index")
                        .HasColumnType("bigint");

                    b.Property<long?>("InterfaceIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeepAliveInterval")
                        .HasColumnType("bigint");

                    b.Property<long?>("KeepAliveTime")
                        .HasColumnType("bigint");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MTU")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NumForwardPackets")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PMTUBHDetectEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("PMTUDiscoveryEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TcpMaxConnectRetransmissions")
                        .HasColumnType("bigint");

                    b.Property<long?>("TcpMaxDataRetransmissions")
                        .HasColumnType("bigint");

                    b.Property<long?>("TcpNumConnections")
                        .HasColumnType("bigint");

                    b.Property<bool?>("TcpUseRFC1122UrgentPointer")
                        .HasColumnType("bit");

                    b.Property<int?>("TcpWindowSize")
                        .HasColumnType("int");

                    b.Property<long?>("TcpipNetbiosOptions")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WINSEnableLMHostsLookup")
                        .HasColumnType("bit");

                    b.Property<string>("WINSHostLookupFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WINSPrimaryServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WINSScopeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WINSSecondaryServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_NetworkAdapterConfiguration");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_OperatingSystem", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BootDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSDVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CurrentTimeZone")
                        .HasColumnType("smallint");

                    b.Property<bool?>("DataExecutionPrevention_32BitApplications")
                        .HasColumnType("bit");

                    b.Property<bool?>("DataExecutionPrevention_Available")
                        .HasColumnType("bit");

                    b.Property<bool?>("DataExecutionPrevention_Drivers")
                        .HasColumnType("bit");

                    b.Property<byte?>("DataExecutionPrevention_SupportPolicy")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Debug")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Distributed")
                        .HasColumnType("bit");

                    b.Property<long?>("EncryptionLevel")
                        .HasColumnType("bigint");

                    b.Property<byte?>("ForegroundApplicationBoost")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("FreePhysicalMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("FreeSpaceInPagingFiles")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("FreeVirtualMemory")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LargeSystemCache")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastBootUpTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LocalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MUILanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxNumberOfProcesses")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MaxProcessMemorySize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NumberOfLicensedUsers")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfProcesses")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfUsers")
                        .HasColumnType("bigint");

                    b.Property<string>("OSArchitecture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OSLanguage")
                        .HasColumnType("bigint");

                    b.Property<long?>("OSProductSuite")
                        .HasColumnType("bigint");

                    b.Property<int?>("OSType")
                        .HasColumnType("int");

                    b.Property<long?>("OperatingSystemSKU")
                        .HasColumnType("bigint");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PAEEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PlusProductID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlusVersionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PortableOperatingSystem")
                        .HasColumnType("bit");

                    b.Property<bool?>("Primary")
                        .HasColumnType("bit");

                    b.Property<long?>("ProductType")
                        .HasColumnType("bigint");

                    b.Property<string>("RegisteredUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicePackMajorVersion")
                        .HasColumnType("int");

                    b.Property<int?>("ServicePackMinorVersion")
                        .HasColumnType("int");

                    b.Property<decimal?>("SizeStoredInPagingFiles")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SuiteMask")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemDirectory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemDrive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalSwapSpaceSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("TotalVirtualMemorySize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("TotalVisibleMemorySize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowsDirectory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_OperatingSystem");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PhysicalMemory", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Attributes")
                        .HasColumnType("bigint");

                    b.Property<string>("BankLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfiguredClockSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfiguredVoltage")
                        .HasColumnType("bigint");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataWidth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceLocator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormFactor")
                        .HasColumnType("int");

                    b.Property<bool?>("HotSwappable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InterleaveDataDepth")
                        .HasColumnType("int");

                    b.Property<long?>("InterleavePosition")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxVoltage")
                        .HasColumnType("bigint");

                    b.Property<int?>("MemoryType")
                        .HasColumnType("int");

                    b.Property<long?>("MinVoltage")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PositionInRow")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("Removable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Replaceable")
                        .HasColumnType("bit");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SMBIOSMemoryType")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Speed")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalWidth")
                        .HasColumnType("int");

                    b.Property<int?>("TypeDetail")
                        .HasColumnType("int");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_PhysicalMemory");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PnPDevice", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SameElement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemElement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_PnPDevice");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PnPEntity", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompatibleID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardwareID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<bool?>("Present")
                        .HasColumnType("bit");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_PnPEntity");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PointingDevice", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceInterface")
                        .HasColumnType("int");

                    b.Property<long?>("DoubleSpeedThreshold")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Handedness")
                        .HasColumnType("int");

                    b.Property<string>("HardwareType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("NumberOfButtons")
                        .HasColumnType("tinyint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointingType")
                        .HasColumnType("int");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<long?>("QuadSpeedThreshold")
                        .HasColumnType("bigint");

                    b.Property<long?>("Resolution")
                        .HasColumnType("bigint");

                    b.Property<long?>("SampleRate")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<long?>("Synch")
                        .HasColumnType("bigint");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_PointingDevice");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PortConnector", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectorPinout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConnectorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalReferenceDesignator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternalReferenceDesignator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherIdentifyingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortType")
                        .HasColumnType("int");

                    b.Property<bool?>("PoweredOn")
                        .HasColumnType("bit");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_PortConnector");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PortResource", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Alias")
                        .HasColumnType("bit");

                    b.Property<string>("CSCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("EndingAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("StartingAddress")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_PortResource");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Printer", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("Attributes")
                        .HasColumnType("bigint");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("AvailableJobSheets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AveragePagesPerMinute")
                        .HasColumnType("bigint");

                    b.Property<string>("Capabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CharSetsSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCharSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentLanguage")
                        .HasColumnType("int");

                    b.Property<string>("CurrentMimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentNaturalLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPaperType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Default")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DefaultCopies")
                        .HasColumnType("bigint");

                    b.Property<int?>("DefaultLanguage")
                        .HasColumnType("int");

                    b.Property<string>("DefaultMimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DefaultNumberUp")
                        .HasColumnType("bigint");

                    b.Property<string>("DefaultPaperType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DefaultPriority")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DetectedErrorState")
                        .HasColumnType("int");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Direct")
                        .HasColumnType("bit");

                    b.Property<bool?>("DoCompleteFirst")
                        .HasColumnType("bit");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableBIDI")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnableDevQueryPrint")
                        .HasColumnType("bit");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExtendedDetectedErrorState")
                        .HasColumnType("int");

                    b.Property<int?>("ExtendedPrinterStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("Hidden")
                        .HasColumnType("bit");

                    b.Property<long?>("HorizontalResolution")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("JobCountSinceLastReset")
                        .HasColumnType("bigint");

                    b.Property<bool?>("KeepPrintedJobs")
                        .HasColumnType("bit");

                    b.Property<string>("LanguagesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Local")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarkingTechnology")
                        .HasColumnType("int");

                    b.Property<long?>("MaxCopies")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberUp")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxSizeSupported")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeTypesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NaturalLanguagesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Network")
                        .HasColumnType("bit");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperSizesSupported")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperTypesAvailable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("PrintJobDataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintProcessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrinterPaperNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PrinterState")
                        .HasColumnType("bigint");

                    b.Property<int?>("PrinterStatus")
                        .HasColumnType("int");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Published")
                        .HasColumnType("bit");

                    b.Property<bool?>("Queued")
                        .HasColumnType("bit");

                    b.Property<bool?>("RawOnly")
                        .HasColumnType("bit");

                    b.Property<string>("SeparatorFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShareName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Shared")
                        .HasColumnType("bit");

                    b.Property<bool?>("SpoolEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UntilTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("VerticalResolution")
                        .HasColumnType("bigint");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<bool?>("WorkOffline")
                        .HasColumnType("bit");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Printer");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Process", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CSCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutablePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExecutionState")
                        .HasColumnType("int");

                    b.Property<string>("Handle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HandleCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("KernelModeTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("MaximumWorkingSetSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinimumWorkingSetSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OtherOperationCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("OtherTransferCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("PageFaults")
                        .HasColumnType("bigint");

                    b.Property<long?>("PageFileUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentProcessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PeakPageFileUsage")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PeakVirtualSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("PeakWorkingSetSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("Priority")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PrivatePageCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaNonPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaPeakNonPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuotaPeakPagedPoolUsage")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ReadOperationCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("ReadTransferCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ThreadCount")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserModeTime")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VirtualSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("WindowsVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("WorkingSetSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("WriteOperationCount")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal?>("WriteTransferCount")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Process");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Processor", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressWidth")
                        .HasColumnType("int");

                    b.Property<int?>("Architecture")
                        .HasColumnType("int");

                    b.Property<string>("AssetTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Characteristics")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<int?>("CpuStatus")
                        .HasColumnType("int");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentClockSpeed")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrentVoltage")
                        .HasColumnType("int");

                    b.Property<int?>("DataWidth")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ExtClock")
                        .HasColumnType("bigint");

                    b.Property<int?>("Family")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("L2CacheSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("L2CacheSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("L3CacheSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("L3CacheSpeed")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("LoadPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxClockSpeed")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NumberOfCores")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfEnabledCore")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberOfLogicalProcessors")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherFamilyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("ProcessorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessorType")
                        .HasColumnType("int");

                    b.Property<int?>("Revision")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SecondLevelAddressTranslationExtensions")
                        .HasColumnType("bit");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocketDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("Stepping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ThreadCount")
                        .HasColumnType("bigint");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpgradeMethod")
                        .HasColumnType("int");

                    b.Property<bool?>("VMMonitorModeExtensions")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VirtualizationFirmwareEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("VoltageCaps")
                        .HasColumnType("bigint");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Processor");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_SerialPort", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<bool?>("Binary")
                        .HasColumnType("bit");

                    b.Property<string>("Capabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxBaudRate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumInputBufferSize")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumOutputBufferSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OSAutoDiscovered")
                        .HasColumnType("bit");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<string>("ProviderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SettableBaudRate")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableDataBits")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableFlowControl")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableParity")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableParityCheck")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableRLSD")
                        .HasColumnType("bit");

                    b.Property<bool?>("SettableStopBits")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<bool?>("Supports16BitMode")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsDTRDSR")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsElapsedTimeouts")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsIntTimeouts")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsParityCheck")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsRLSD")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsRTSCTS")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsSpecialCharacters")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsXOnXOff")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsXOnXOffSet")
                        .HasColumnType("bit");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_SerialPort");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_SoundDevice", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DMABufferSize")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MPU401Address")
                        .HasColumnType("bigint");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_SoundDevice");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_TimeZone", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bias")
                        .HasColumnType("int");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DaylightBias")
                        .HasColumnType("int");

                    b.Property<long?>("DaylightDay")
                        .HasColumnType("bigint");

                    b.Property<byte?>("DaylightDayOfWeek")
                        .HasColumnType("tinyint");

                    b.Property<long?>("DaylightHour")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaylightMillisecond")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaylightMinute")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaylightMonth")
                        .HasColumnType("bigint");

                    b.Property<string>("DaylightName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DaylightSecond")
                        .HasColumnType("bigint");

                    b.Property<long?>("DaylightYear")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StandardBias")
                        .HasColumnType("bigint");

                    b.Property<long?>("StandardDay")
                        .HasColumnType("bigint");

                    b.Property<byte?>("StandardDayOfWeek")
                        .HasColumnType("tinyint");

                    b.Property<long?>("StandardHour")
                        .HasColumnType("bigint");

                    b.Property<long?>("StandardMillisecond")
                        .HasColumnType("bigint");

                    b.Property<long?>("StandardMinute")
                        .HasColumnType("bigint");

                    b.Property<long?>("StandardMonth")
                        .HasColumnType("bigint");

                    b.Property<string>("StandardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StandardSecond")
                        .HasColumnType("bigint");

                    b.Property<long?>("StandardYear")
                        .HasColumnType("bigint");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_TimeZone");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_VideoController", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceleratorCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdapterCompatibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdapterDACType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("AdapterRAM")
                        .HasColumnType("bigint");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("CapabilityDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ColorTableEntries")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentBitsPerPixel")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentHorizontalResolution")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("CurrentNumberOfColors")
                        .HasColumnType("decimal(20,0)");

                    b.Property<long?>("CurrentNumberOfColumns")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentNumberOfRows")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrentRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrentScanMode")
                        .HasColumnType("int");

                    b.Property<long?>("CurrentVerticalResolution")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DeviceSpecificPens")
                        .HasColumnType("bigint");

                    b.Property<long?>("DitherType")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DriverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ICMIntent")
                        .HasColumnType("bigint");

                    b.Property<long?>("ICMMethod")
                        .HasColumnType("bigint");

                    b.Property<string>("InfFilename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstalledDisplayDrivers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxMemorySupported")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxNumberControlled")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinRefreshRate")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Monochrome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfColorPlanes")
                        .HasColumnType("int");

                    b.Property<long?>("NumberOfVideoPages")
                        .HasColumnType("bigint");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<int?>("ProtocolSupported")
                        .HasColumnType("int");

                    b.Property<long?>("ReservedSystemPaletteEntries")
                        .HasColumnType("bigint");

                    b.Property<long?>("SpecificationVersion")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SystemPaletteEntries")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TimeOfLastReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VideoArchitecture")
                        .HasColumnType("int");

                    b.Property<int?>("VideoMemoryType")
                        .HasColumnType("int");

                    b.Property<int?>("VideoMode")
                        .HasColumnType("int");

                    b.Property<string>("VideoModeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoProcessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_VideoController");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_VideoSettings", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Element")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_VideoSettings");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Volume", b =>
                {
                    b.Property<int>("WMIID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Access")
                        .HasColumnType("int");

                    b.Property<bool?>("Automount")
                        .HasColumnType("bit");

                    b.Property<int?>("Availability")
                        .HasColumnType("int");

                    b.Property<decimal?>("BlockSize")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("BootVolume")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Capacity")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Compressed")
                        .HasColumnType("bit");

                    b.Property<long?>("ConfigManagerErrorCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ConfigManagerUserConfig")
                        .HasColumnType("bit");

                    b.Property<string>("CreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DirtyBitSet")
                        .HasColumnType("bit");

                    b.Property<string>("DriveLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DriveType")
                        .HasColumnType("bigint");

                    b.Property<bool?>("ErrorCleared")
                        .HasColumnType("bit");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMethodology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FreeSpace")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool?>("IndexingEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InstallDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastErrorCode")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaximumFileNameLength")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NumberOfBlocks")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("PNPDeviceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PageFilePresent")
                        .HasColumnType("bit");

                    b.Property<string>("PowerManagementCapabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PowerManagementSupported")
                        .HasColumnType("bit");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("QuotasEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasIncomplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("QuotasRebuilding")
                        .HasColumnType("bit");

                    b.Property<long?>("SerialNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusInfo")
                        .HasColumnType("int");

                    b.Property<bool?>("SupportsDiskQuotas")
                        .HasColumnType("bit");

                    b.Property<bool?>("SupportsFileBasedCompression")
                        .HasColumnType("bit");

                    b.Property<string>("SystemCreationClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SystemVolume")
                        .HasColumnType("bit");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WmiResultsSetEntityID")
                        .HasColumnType("int");

                    b.HasKey("WMIID");

                    b.HasIndex("WmiResultsSetEntityID");

                    b.ToTable("Win32_Volume");
                });

            modelBuilder.Entity("GathererEngine.Models.BatteryFullChargedCapacity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("BatteryFullChargedCapacity")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.BatteryStaticData", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("BatteryStaticData")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.BatteryStatus", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("BatteryStatus")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_BIOSElement", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_BIOSElement")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Battery", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Battery")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Card", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Card")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Chip", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Chip")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_ComputerSystem", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_ComputerSystem")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Controller", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Controller")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_CoolingDevice", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_CoolingDevice")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_CurrentSensor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_CurrentSensor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_DesktopMonitor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_DesktopMonitor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_DiskDrive", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_DiskDrive")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_DiskPartition", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_DiskPartition")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Display", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Display")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Fan", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Fan")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_InstalledOS", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_InstalledOS")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Keyboard", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Keyboard")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_LogicalDisk", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_LogicalDisk")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Memory", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Memory")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_NetworkAdapter", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_NetworkAdapter")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_NumericSensor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_NumericSensor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_OperatingSystem", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_OperatingSystem")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PCVideoController", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_PCVideoController")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PhysicalConnector", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_PhysicalConnector")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PhysicalElement", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_PhysicalElement")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PhysicalMemory", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_PhysicalMemory")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_PointingDevice", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_PointingDevice")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Printer", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Printer")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Process", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Process")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Processor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Processor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Product", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Product")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_SCSIController", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_SCSIController")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Sensor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Sensor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_SerialController", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_SerialController")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_Slot", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_Slot")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_StorageVolume", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_StorageVolume")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_System", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_System")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_TemperatureSensor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_TemperatureSensor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_USBController", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_USBController")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_USBDevice", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_USBDevice")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_UnitaryComputerSystem", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_UnitaryComputerSystem")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VideoController", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_VideoController")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VideoControllerResolution", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_VideoControllerResolution")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VideoSetting", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_VideoSetting")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.CIM_VoltageSensor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("CIM_VoltageSensor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.MSAcpi_ThermalZoneTemperature", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("MSAcpi_ThermalZoneTemperature")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.MSFT_PhysicalDisk", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("MSFT_PhysicalDisk")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.SoftwareLicensingProduct", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("SoftwareLicensingProduct")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.SoftwareLicensingService", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("SoftwareLicensingService")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Account", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Account")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_AssociatedProcessorMemory", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_AssociatedProcessorMemory")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_BIOS", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_BIOS")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_BaseBoard", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_BaseBoard")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Battery", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Battery")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Bus", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Bus")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_CDROMDrive", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_CDROMDrive")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_CacheMemory", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_CacheMemory")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_ComputerSystem", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_ComputerSystem")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_DiskDrive", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_DiskDrive")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_DiskPartition", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_DiskPartition")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Fan", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Fan")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Keyboard", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Keyboard")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_LogicalDisk", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_LogicalDisk")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_MotherboardDevice", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_MotherboardDevice")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_NetworkAdapter", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_NetworkAdapter")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_NetworkAdapterConfiguration", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_NetworkAdapterConfiguration")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_OperatingSystem", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_OperatingSystem")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PhysicalMemory", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_PhysicalMemory")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PnPDevice", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_PnPDevice")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PnPEntity", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_PnPEntity")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PointingDevice", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_PointingDevice")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PortConnector", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_PortConnector")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_PortResource", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_PortResource")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Printer", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Printer")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Process", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Process")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Processor", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Processor")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_SerialPort", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_SerialPort")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_SoundDevice", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_SoundDevice")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_TimeZone", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_TimeZone")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_VideoController", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_VideoController")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_VideoSettings", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_VideoSettings")
                        .HasForeignKey("WmiResultsSetEntityID");
                });

            modelBuilder.Entity("GathererEngine.Models.Win32_Volume", b =>
                {
                    b.HasOne("RetrieverCore.LocalDatabase.Models.WmiResultsSetEntity", "WmiResultsSetEntity")
                        .WithMany("Win32_Volume")
                        .HasForeignKey("WmiResultsSetEntityID");
                });
#pragma warning restore 612, 618
        }
    }
}
