// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetrieverCore.IO.Database;

namespace RetrieverCore.IO.Migrations
{
    [DbContext(typeof(ComputerContext))]
    [Migration("20200716203900_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.BatteryEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxWearLevel")
                        .HasColumnType("REAL");

                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.Property<double>("Voltage")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("BatteryEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.ComputerEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainboardID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MainboardID");

                    b.ToTable("ComputerEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.DDREntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Clocking")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("DDREntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.GPUEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<double>("MemorySize")
                        .HasColumnType("REAL");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScreenHeight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScreenWidth")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("GPUEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.MainboardEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Socket")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("MainboardEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.MainboardPortEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainboardEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MainboardEntityID");

                    b.ToTable("MainboardPortEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.NetworkInterfaceEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("NetworkInterfaceEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.ProcessorEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Architecture")
                        .HasColumnType("TEXT");

                    b.Property<double>("ClockSpeed")
                        .HasColumnType("REAL");

                    b.Property<byte>("Cores")
                        .HasColumnType("INTEGER");

                    b.Property<double>("L2CacheSize")
                        .HasColumnType("REAL");

                    b.Property<double>("L3CacheSize")
                        .HasColumnType("REAL");

                    b.Property<byte>("LogicalProcessor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainboardEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Socket")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("MainboardEntityID");

                    b.ToTable("ProcessorEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.StorageEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ComputerEntityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ComputerEntityID");

                    b.ToTable("StorageEntity");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.BatteryEntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.ComputerEntity", null)
                        .WithMany("Batteries")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.ComputerEntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.MainboardEntity", "Mainboard")
                        .WithMany()
                        .HasForeignKey("MainboardID");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.DDREntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.ComputerEntity", null)
                        .WithMany("DDRs")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.GPUEntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.ComputerEntity", null)
                        .WithMany("GPUs")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.MainboardPortEntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.MainboardEntity", null)
                        .WithMany("MainboardPorts")
                        .HasForeignKey("MainboardEntityID");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.NetworkInterfaceEntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.ComputerEntity", null)
                        .WithMany("NetworkInterfaces")
                        .HasForeignKey("ComputerEntityID");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.ProcessorEntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.MainboardEntity", null)
                        .WithMany("Processors")
                        .HasForeignKey("MainboardEntityID");
                });

            modelBuilder.Entity("RetrieverCore.Models.DatabaseEntities.StorageEntity", b =>
                {
                    b.HasOne("RetrieverCore.Models.DatabaseEntities.ComputerEntity", null)
                        .WithMany("Storages")
                        .HasForeignKey("ComputerEntityID");
                });
#pragma warning restore 612, 618
        }
    }
}
